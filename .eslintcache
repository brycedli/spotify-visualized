[{"/Users/wencheng/Documents/dev/projects/musicscape/spotify-visualized/src/App.js":"1","/Users/wencheng/Documents/dev/projects/musicscape/spotify-visualized/src/pages/Visualize.js":"2","/Users/wencheng/Documents/dev/projects/musicscape/spotify-visualized/src/pages/Login.js":"3","/Users/wencheng/Documents/dev/projects/musicscape/spotify-visualized/src/index.js":"4","/Users/wencheng/Documents/dev/projects/musicscape/spotify-visualized/src/reducers/index.js":"5","/Users/wencheng/Documents/dev/projects/musicscape/spotify-visualized/src/reducers/particles.js":"6","/Users/wencheng/Documents/dev/projects/musicscape/spotify-visualized/src/actions/index.js":"7","/Users/wencheng/Documents/dev/projects/musicscape/spotify-visualized/src/components/Welcome.js":"8","/Users/wencheng/Documents/dev/projects/musicscape/spotify-visualized/src/middleware/SpotifyApi.js":"9","/Users/wencheng/Documents/dev/projects/musicscape/spotify-visualized/src/theme.js":"10"},{"size":1157,"mtime":1611013679643,"results":"11","hashOfConfig":"12"},{"size":8732,"mtime":1610956527627,"results":"13","hashOfConfig":"12"},{"size":1972,"mtime":1611012884815,"results":"14","hashOfConfig":"12"},{"size":439,"mtime":1611013664978,"results":"15","hashOfConfig":"12"},{"size":125,"mtime":1610954220112,"results":"16","hashOfConfig":"12"},{"size":341,"mtime":1610932354265,"results":"17","hashOfConfig":"12"},{"size":242,"mtime":1610930320534,"results":"18","hashOfConfig":"12"},{"size":1992,"mtime":1611021695037,"results":"19","hashOfConfig":"12"},{"size":715,"mtime":1611000049028,"results":"20","hashOfConfig":"12"},{"size":661,"mtime":1611017343423,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"15gxljm",{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/wencheng/Documents/dev/projects/musicscape/spotify-visualized/src/App.js",["44"],"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport theme from \"./theme\";\n\n// import logo from './logo.svg';\n// import './App.css';\n\nimport LoginPage from './pages/Login'\nimport VisualizePage from './pages/Visualize'\n\nfunction App() {\n\n  return (\n    <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <div className=\"App\" >\n      <Router>\n        <Switch>\n          <Route path=\"/\">\n            <LoginPage/>\n          </Route>\n          <Route path=\"/visualize\">\n            <VisualizePage/>\n          </Route>\n        </Switch>\n      </Router>\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n    </div>\n  </ThemeProvider>\n  );\n}\n\nexport default App;\n","/Users/wencheng/Documents/dev/projects/musicscape/spotify-visualized/src/pages/Visualize.js",["45","46","47","48","49"],"import { map } from \"async\";\nimport { Component, createElement } from \"react\";\nimport * as THREE from \"three\";\nimport { connect } from 'react-redux'\nimport { addParticles } from '../actions'\nimport PropTypes from 'prop-types';\n\n\nvar accessToken;\nvar hash = {};\nvar particles = new Map();\nwindow.location.hash.replace(/^#\\/?/, '').split('&').forEach(function(kv) {\n    var spl = kv.indexOf('=');\n    if (spl !== -1) {\n        hash[kv.substring(0, spl)] = decodeURIComponent(kv.substring(spl+1));\n    }\n    \n});\nvar maxSongs = 400;\n\n// console.log('initial hash', hash);\nif (hash.access_token){\n    // initializeThree();\n    accessToken = hash.access_token;\n\n    //var url = 'https://api.spotify.com/v1/me/tracks?time_range=short_term&limit=10';\n    var url = 'https://api.spotify.com/v1/me/top/tracks?time_range=long_term&limit=10'\n    getTopSongs(url, function(){\n        getFeatures(function(){\n            console.log(\"done\", particles);\n\n        });\n    });\n\n    function getFeatures(callback){\n        function analyzeTrack(accessToken, arr) {\n            var newArr = [];\n            //GET https://api.spotify.com/v1/audio-analysis/{id}\n            arr.forEach(function (item, index, array) {\n                newArr.push(item.getTrackData().id);\n                // console.log(item.getTrackData().id); \n            });\n            var fullURL = 'https://api.spotify.com/v1/audio-features?ids=' + newArr.join(\",\");\n            // console.log(arr.join(\",\"));\n            return fetch(fullURL, {\n                method: 'GET',\n\n                headers: {\n                    'Authorization': 'Bearer ' + accessToken,\n                },\n\n            });\n\n        }\n        var mapArray = Array.from(particles.values());\n            requestTrackWrapper(0);\n            function requestTrackWrapper(index) {\n                var maxedIndex = Math.min(index + 50, mapArray.length);\n                analyzeTrack(accessToken, mapArray.slice(index, maxedIndex)).then((response) => {\n                    return response.json();\n                }).then((data) => {\n                    setTimeout(function () {\n                        // loadingText.textContent = \"analyzing \" + maxedIndex + \"/\" +  mapArray.length + ' songs...';\n                        // loadingText.style.display = 'block';\n                        console.log(\"maxed:\", maxedIndex, \"index\", index);\n                        if (data) {\n                            console.log(data);\n\n                            data.audio_features.forEach(function (item, index, array) {\n                                if (item && item.id && particles.get(item.id)){\n                                    particles.get(item.id).addFeatureData(item);\n                                }\n                            });\n                        } else {\n                            console.log(\"no data\");\n                        }\n                        if (maxedIndex < mapArray.length){\n                            requestTrackWrapper(maxedIndex);\n\n                        }else{\n                            // loadingText.style.display = 'none';\n                            callback();\n                            // console.log(\"done\");\n                            // renderData();\n                        }\n                    }, 5);\n\n                });\n            }\n    }\n    function getTopSongs(url, callback){\n        \n        fetch(url,{\n            method: 'GET',\n            headers:{\n                'Authorization' : 'Bearer ' + accessToken,\n            },\n    \n        }).then((response)=>{\n            return response.json();\n        }).then((data)=> {\n            console.log(data);\n\n            data.items.forEach(function(item, index, array) {\n                var particle = new Particle();\n                particle.addTrackData(item);\n                // console.log(item.track.name, item.track.artists[0].name);\n                if(!item){\n                    console.log(\"item not found in initial song loop\");\n                }\n\n                if (!particles.get(item.id)) {\n                    particles.set(item.id, particle);\n    \n                } else {\n                    console.log(\"Duplicate item, skipping\");\n                }\n                \n\n            })\n            console.log(data.next, data.offset);\n            //update view\n            //updateFunction\n\n            // if (maxSongs > particles.size){\n            //     getTopSongs(data.next, callback);\n\n            // }\n            if (data.next) {\n\n                getTopSongs(data.next, callback);\n            } \n            else {\n                callback();\n            }\n        });\n    }\n    \n}\nclass Particle {\n    // trackData;\n    // featureData;\n    addTrackData(trackData) {\n        this.trackData = trackData;\n    };\n\n    addFeatureData(featureData) {\n        this.featureData = featureData;\n    };\n    getTrackData(trackData) {\n        return this.trackData;\n    };\n    getFeatureData(featureData) {\n        return this.featureData;\n    };\n\n}\n\n\n\nclass ThreeJsComponent extends Component {\n\n  constructor (props){\n    super(props);\n    this.particles = [];\n  }\n  componentDidUpdate(preProp) {\n    console.log('updated');\n    this.handleUpdate();\n  }\n  renderParticle(particle){\n    //do particle addition logic here, otherwise render.\n    //1. create new sphere , set pos and size, color\n    //2. create new 3d text, set anchor,size,content\n    //3. this.renderer.add sphere and text\n    var geometry = new THREE.BoxGeometry(2, 0.5, 0.5);\n    var material = new THREE.MeshBasicMaterial({ color: 0x333300 });\n    var cube = new THREE.Mesh(geometry, material);\n    cube.position.x = Math.floor(Math.random() * 4);\n    cube.position.y = Math.floor(Math.random() * 4);\n    this.scene.add(cube);\n  }\n  \n  handleUpdate(){\n    console.log(`render particle ${this.props.particles} in Visualize`);\n    const currentState = [];\n    for (const p in this.props.particles){\n      //console.log(p);\n      this.renderParticle(p);\n      this.particles.push(p);\n    }\n    \n    this.renderer.render(this.scene, this.camera);\n    console.log('rendered', this.particles);\n    //somehow add orbit control js, which allow drag to rotate camera\n    //https://github.com/brycedli/spotify-visualized/blob/aa9485c2b8b2a4f60869ac57ae89cd051da053bb/django-spotify/spotme/templates/spotme/visualize.html#L470\n    console.log(\"rendered\");\n  }\n  \n  // return <h1>Hello</h1>;\n  componentDidMount(){\n      this.scene = new THREE.Scene();\n      this.camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n      );\n\n      this.renderer = new THREE.WebGLRenderer();\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n      console.log(this.mount);\n      this.mount.appendChild(this.renderer.domElement);\n\n      var geometry = new THREE.BoxGeometry(1, 1, 1);\n      var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n      var cube = new THREE.Mesh(geometry, material);\n      this.scene.add(cube);\n\n      this.camera.position.z = 5;\n\n      this.renderer.render(this.scene, this.camera);\n      var _renderer = this.renderer;\n      var _scene = this.scene;\n      var _camera = this.camera;\n      var animate = function () {\n        requestAnimationFrame( animate );\n        cube.rotation.x += 0.01;\n        cube.rotation.y += 0.01;\n        _renderer.render( _scene, _camera );\n      };\n      animate();\n  }\n\n  render(){\n    return (\n      <div>\n        <p>\n            Visualize stuff here\n        </p>\n        <p>\n          {/* particles: {this.props.particle} */}\n        </p>\n        {/* <ul>\n          {this.props.particles.map(p => (\n          <li>{p}</li>\n          ))}\n        </ul> */}\n        <div \n            style={{ width: \"800px\", height: \"800px\" }}\n            ref={mount => { this.mount = mount}}\n        />\n      </div>\n    )\n  }\n}\n// console.log(\"creating component\")\n// const objType = createElement(ThreeJsComponent,{ name:\"nnamdi\" });\n// objType.handleUpdate();\n// var threeCompRef;\n// export default function VisualizePage(){\n//     return(\n//         <div>\n//             <p>\n//                 Visualize stuff here\n//             </p>\n//             <ThreeJsComponent/>\n//             {/* <ThreeJsComponent ref={this.threeCompRef}/> */}\n//         </div>\n//     )\n// }\n\n\nconst mapStateToProps = (state) => {\n  console.log(state.particles);\n  return {\n    particles: state.particles\n  };\n}\n\n// const mapDispatchToProps = dispatch => {\n//   console.log('mapDispatchToProps called');\n//   return {\n//     particles: partical => dispatch(partical)\n//   };\n// }\n\nThreeJsComponent.propTypes = {\n  particles: PropTypes.array\n}\n\n\n\nexport default connect(mapStateToProps /*,mapDispatchToProps*/)(ThreeJsComponent) \n","/Users/wencheng/Documents/dev/projects/musicscape/spotify-visualized/src/pages/Login.js",["50","51","52","53","54"],"/Users/wencheng/Documents/dev/projects/musicscape/spotify-visualized/src/index.js",[],"/Users/wencheng/Documents/dev/projects/musicscape/spotify-visualized/src/reducers/index.js",[],"/Users/wencheng/Documents/dev/projects/musicscape/spotify-visualized/src/reducers/particles.js",[],"/Users/wencheng/Documents/dev/projects/musicscape/spotify-visualized/src/actions/index.js",[],"/Users/wencheng/Documents/dev/projects/musicscape/spotify-visualized/src/components/Welcome.js",["55","56","57"],"/Users/wencheng/Documents/dev/projects/musicscape/spotify-visualized/src/middleware/SpotifyApi.js",[],"/Users/wencheng/Documents/dev/projects/musicscape/spotify-visualized/src/theme.js",["58"],{"ruleId":"59","severity":1,"message":"60","line":6,"column":3,"nodeType":"61","messageId":"62","endLine":6,"endColumn":7},{"ruleId":"59","severity":1,"message":"63","line":1,"column":10,"nodeType":"61","messageId":"62","endLine":1,"endColumn":13},{"ruleId":"59","severity":1,"message":"64","line":2,"column":21,"nodeType":"61","messageId":"62","endLine":2,"endColumn":34},{"ruleId":"59","severity":1,"message":"65","line":5,"column":10,"nodeType":"61","messageId":"62","endLine":5,"endColumn":22},{"ruleId":"59","severity":1,"message":"66","line":19,"column":5,"nodeType":"61","messageId":"62","endLine":19,"endColumn":13},{"ruleId":"59","severity":1,"message":"67","line":186,"column":11,"nodeType":"61","messageId":"62","endLine":186,"endColumn":23},{"ruleId":"59","severity":1,"message":"63","line":1,"column":10,"nodeType":"61","messageId":"62","endLine":1,"endColumn":13},{"ruleId":"59","severity":1,"message":"64","line":2,"column":21,"nodeType":"61","messageId":"62","endLine":2,"endColumn":34},{"ruleId":"59","severity":1,"message":"68","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":17},{"ruleId":"59","severity":1,"message":"69","line":7,"column":10,"nodeType":"61","messageId":"62","endLine":7,"endColumn":17},{"ruleId":"59","severity":1,"message":"70","line":23,"column":10,"nodeType":"61","messageId":"62","endLine":23,"endColumn":22},{"ruleId":"59","severity":1,"message":"71","line":6,"column":9,"nodeType":"61","messageId":"62","endLine":6,"endColumn":23},{"ruleId":"59","severity":1,"message":"72","line":6,"column":25,"nodeType":"61","messageId":"62","endLine":6,"endColumn":44},{"ruleId":"59","severity":1,"message":"73","line":20,"column":9,"nodeType":"61","messageId":"62","endLine":20,"endColumn":16},{"ruleId":"59","severity":1,"message":"74","line":2,"column":9,"nodeType":"61","messageId":"62","endLine":2,"endColumn":13},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'map' is defined but never used.","'createElement' is defined but never used.","'addParticles' is defined but never used.","'maxSongs' is assigned a value but never used.","'currentState' is assigned a value but never used.","'PropTypes' is defined but never used.","'onLogin' is defined but never used.","'testParticle' is defined but never used.","'CONNECTION_URL' is defined but never used.","'authenticateSpotify' is defined but never used.","'classes' is assigned a value but never used.","'grey' is defined but never used."]